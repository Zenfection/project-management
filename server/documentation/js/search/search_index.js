var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,2.296,1,1.827]],["body/guards/AccessTokenGuard.html",[1,2.161,2,1.883,3,0.588,4,0.263,5,0.263,6,4.016,7,2.511,8,2.169,9,0.379,10,1.153,11,4.258,12,3.755,13,2.294,14,1.043,15,2.604,16,2.169,17,3.486,18,2.604,19,1.367,20,0.033,21,1.256,22,0.813,23,1.367,24,3.128,25,1.153,26,3.755,27,2.161,28,4.404,29,3.755,30,2.662,31,2.604,32,4.821,33,0.713,34,0.741,35,2.169,36,0.513,37,2.604,38,1.498,39,2.169,40,0.3,41,0.099,42,1.669,43,2.604,44,1.883,45,1.883,46,1.153,47,2.604,48,2.715,49,2.604,50,2.604,51,2.604,52,1.669,53,2.604,54,2.169,55,2.169,56,2.604,57,0.019,58,0.019]],["title/injectables/AccessTokenStrategy.html",[34,0.626,59,1.654]],["body/injectables/AccessTokenStrategy.html",[3,0.327,4,0.287,5,0.287,7,2.408,9,0.414,10,1.228,13,2.082,14,0.947,19,1.456,20,0.033,21,1.337,22,0.865,23,1.456,25,0.873,33,0.856,34,0.788,36,0.561,38,1.636,40,0.327,41,0.108,42,1.822,45,2.056,46,0.873,57,0.021,58,0.021,59,2.082,60,1.231,61,3.852,62,2.056,63,2.661,64,3.33,65,2.843,66,4.179,67,2.843,68,3.998,69,3.998,70,2.843,71,2.891,72,2.056,73,2.368,74,1.636,75,2.368,76,2.368,77,2.368,78,2.056,79,2.891,80,2.056,81,2.843,82,2.843,83,2.368,84,1.822,85,1.481,86,2.368,87,2.368,88,2.843,89,2.843,90,2.843,91,2.843,92,2.056,93,2.368,94,2.368,95,2.843]],["title/interfaces/ActiveUserData.html",[96,2.035,97,1.827]],["body/interfaces/ActiveUserData.html",[3,0.462,4,0.405,5,0.405,9,0.584,20,0.031,22,1.088,30,2.09,40,0.462,57,0.026,58,0.026,96,2.572,97,2.893,98,4.012,99,3.342,100,3.342,101,2.384,102,3.313,103,4.796,104,1.687,105,3.52]],["title/controllers/AppController.html",[106,1.505,107,2.035]],["body/controllers/AppController.html",[3,0.433,4,0.379,5,0.379,9,0.547,10,1.482,14,0.89,20,0.033,25,1.154,33,0.781,36,0.741,40,0.433,41,0.142,46,1.154,57,0.025,58,0.025,85,1.957,104,1.482,106,2.287,107,3.092,108,1.628,109,3.131,110,4.682,111,2.162,112,3.758,113,2.775,114,3.131,115,3.131,116,3.758]],["title/modules/AppModule.html",[117,1.26,118,2.035]],["body/modules/AppModule.html",[3,0.337,4,0.295,5,0.295,20,0.033,33,0.919,36,0.577,40,0.337,41,0.111,57,0.021,58,0.021,74,1.683,107,3.009,108,1.766,113,2.881,114,2.436,117,1.863,118,3.818,119,1.386,120,1.386,121,1.683,122,1.683,123,1.386,124,2.702,125,1.683,126,2.436,127,2.436,128,2.436,129,3.183,130,3.183,131,2.346,132,1.683,133,1.683,134,2.924,135,2.949,136,2.924,137,2.924,138,1.875,139,1.875,140,2.924,141,2.436,142,2.924,143,2.924,144,2.924]],["title/injectables/AppService.html",[34,0.626,113,1.654]],["body/injectables/AppService.html",[3,0.459,4,0.402,5,0.402,9,0.581,10,1.539,14,0.945,20,0.032,25,1.225,33,0.646,34,0.988,36,0.787,40,0.459,41,0.151,46,1.225,57,0.026,58,0.026,60,1.728,104,1.539,110,4.786,113,2.609,145,3.323,146,3.989,147,3.989,148,3.989]],["title/controllers/AuthenticationController.html",[106,1.505,149,2.035]],["body/controllers/AuthenticationController.html",[3,0.303,4,0.266,5,0.266,7,1.371,9,0.383,10,1.163,13,1.371,14,0.897,19,1.378,20,0.033,21,1.266,22,0.819,23,1.378,25,1.163,33,0.891,36,0.519,40,0.303,41,0.1,46,1.163,57,0.019,58,0.019,59,2.308,84,2.426,85,1.971,106,1.248,108,1.14,111,2.178,149,2.426,150,2.193,151,2.193,152,2.633,153,3.153,154,3.153,155,2.193,156,3.076,157,4.846,158,2.633,159,2.193,160,3.076,161,3.785,162,2.633,163,2.193,164,2.193,165,1.971,166,2.193,167,3.153,168,1.687,169,2.193,170,1.687,171,2.193,172,2.193,173,2.193,174,1.904,175,2.193,176,1.687,177,2.193,178,2.193,179,2.633,180,2.633,181,2.633,182,2.633,183,2.633,184,2.633,185,2.633]],["title/guards/AuthenticationGuard.html",[0,2.296,186,2.035]],["body/guards/AuthenticationGuard.html",[1,2.969,2,2.355,3,0.247,4,0.217,5,0.217,7,1.119,9,0.313,10,1,11,3.931,13,1.696,14,0.772,16,2.713,17,3.175,19,1.186,20,0.033,21,1.089,22,0.705,23,1.186,24,1.79,25,0.66,27,1.874,33,0.764,34,0.642,36,0.424,40,0.247,41,0.081,44,1.553,46,1.208,48,1.553,54,1.79,57,0.02,58,0.017,63,2.264,84,3.183,85,2.587,92,1.553,101,1.018,175,1.79,176,1.377,177,1.79,178,1.79,186,2.088,187,1.79,188,3.257,189,3.257,190,3.257,191,2.148,192,4.966,193,2.148,194,2.148,195,1.79,196,1.553,197,2.355,198,3.257,199,2.148,200,2.148,201,2.148,202,2.715,203,2.713,204,2.148,205,2.148,206,2.148,207,2.148,208,2.148,209,2.148,210,2.148,211,2.148,212,2.148,213,2.148,214,1.553,215,2.148,216,4.39,217,3.257,218,2.148,219,3.257,220,2.148,221,2.148,222,2.148,223,2.148]],["title/modules/AuthenticationModule.html",[117,1.26,224,1.827]],["body/modules/AuthenticationModule.html",[1,2.084,3,0.285,4,0.25,5,0.25,7,1.886,20,0.033,33,0.971,36,0.488,38,1.425,40,0.285,41,0.094,57,0.019,58,0.019,59,2.726,74,1.425,80,1.791,108,1.569,117,1.699,119,1.174,120,1.174,121,1.425,122,1.425,123,1.174,124,2.463,125,1.425,131,2.084,132,1.425,133,1.425,135,1.791,138,1.588,139,1.588,141,2.063,149,2.744,165,2.726,166,2.063,172,2.063,173,2.063,186,2.321,195,2.063,196,1.791,224,3.189,225,2.063,226,2.063,227,2.477,228,1.886,229,2.063,230,2.321,231,2.477,232,3.017,233,3.621,234,2.477,235,1.791,236,2.477,237,2.063,238,2.477,239,2.477,240,3.621,241,3.621,242,3.621,243,2.477,244,2.477]],["title/injectables/AuthenticationService.html",[34,0.626,165,1.654]],["body/injectables/AuthenticationService.html",[3,0.145,4,0.127,5,0.127,9,0.184,10,0.654,13,1.108,14,0.927,19,1.515,20,0.033,21,1.308,22,0.901,23,1.424,25,1.109,27,1.225,30,2.167,33,0.801,34,0.42,35,1.053,36,0.249,40,0.145,41,0.048,46,0.993,48,2.61,52,2.313,57,0.011,58,0.011,60,0.547,63,3.007,66,2.694,71,2.828,72,1.993,73,1.053,74,0.727,80,0.914,83,1.053,84,3.012,85,1.684,97,0.727,102,2.251,103,1.053,104,0.847,105,2.507,138,0.81,139,0.81,153,1.773,154,1.773,155,1.773,156,2.251,159,1.773,160,2.251,165,1.108,167,1.773,168,0.81,169,1.053,170,0.81,171,1.053,202,2.616,214,3.288,228,1.684,229,1.053,232,3.466,235,0.914,237,1.053,245,1.053,246,2.128,247,2.128,248,2.128,249,1.264,250,2.756,251,4.16,252,1.264,253,2.128,254,2.128,255,1.264,256,2.128,257,2.313,258,1.264,259,1.264,260,2.128,261,3.234,262,3.234,263,1.264,264,2.128,265,1.264,266,1.264,267,1.264,268,1.264,269,1.053,270,2.128,271,1.264,272,1.264,273,1.264,274,1.264,275,1.767,276,2.128,277,2.756,278,2.756,279,2.128,280,1.264,281,2.128,282,1.264,283,1.264,284,1.264,285,1.264,286,2.128,287,2.128,288,1.264,289,2.128,290,1.264,291,1.264,292,1.264,293,1.264,294,0.914,295,1.264,296,2.128,297,1.264,298,1.264,299,2.128,300,2.756,301,2.296,302,1.264,303,1.264,304,1.264,305,1.264,306,1.264,307,1.264,308,1.264,309,1.264,310,1.264,311,1.264,312,1.264,313,1.264,314,1.264]],["title/injectables/BcryptService.html",[34,0.626,230,2.035]],["body/injectables/BcryptService.html",[3,0.322,4,0.282,5,0.282,9,0.407,10,1.214,14,0.936,19,1.44,20,0.033,21,1.322,22,0.856,23,1.44,25,1.214,27,2.866,33,0.742,34,0.78,36,0.552,40,0.322,41,0.106,44,2.023,46,1.214,57,0.02,58,0.02,60,1.212,63,3.139,104,1.789,202,1.61,214,2.023,228,2.059,230,2.534,294,2.859,315,2.331,316,3.819,317,3.819,318,3.819,319,4.544,320,4.15,321,2.798,322,3.819,323,2.798,324,2.798,325,2.331,326,2.798,327,3.953,328,2.798]],["title/classes/CreateUserDto.html",[41,0.12,329,1.654]],["body/classes/CreateUserDto.html",[3,0.53,4,0.465,5,0.465,20,0.03,40,0.53,41,0.174,57,0.028,58,0.028,329,2.85,330,2.401,331,3.84,332,3.333]],["title/injectables/HashingService.html",[34,0.626,228,1.654]],["body/injectables/HashingService.html",[3,0.362,4,0.317,5,0.317,9,0.457,10,1.317,14,1.015,19,1.561,20,0.032,21,1.433,22,0.928,23,1.561,25,1.317,27,3.014,33,0.509,34,0.845,36,0.62,40,0.362,41,0.119,57,0.022,58,0.022,60,1.362,104,1.835,228,2.233,294,3.1,316,3.571,317,3.571,318,3.571,319,4.712,320,4.063,322,3.571,333,2.619,334,5.789,335,3.144,336,3.144]],["title/modules/IamModule.html",[117,1.26,129,1.827]],["body/modules/IamModule.html",[3,0.421,4,0.369,5,0.369,20,0.032,33,0.768,36,0.722,40,0.421,41,0.139,57,0.024,58,0.024,108,1.586,117,2.088,119,1.736,120,1.736,121,2.107,122,2.107,123,1.736,124,2.729,125,2.107,129,3.399,131,2.729,132,2.107,133,2.107,135,3.43,224,3.399,337,3.661,338,3.661,339,3.661,340,3.661]],["title/injectables/RefreshTokenStrategy.html",[34,0.626,341,2.296]],["body/injectables/RefreshTokenStrategy.html",[3,0.335,4,0.294,5,0.294,9,0.424,10,1.249,13,2.44,14,0.963,19,1.061,20,0.033,21,0.974,22,0.63,23,1.061,25,0.895,33,0.821,34,0.802,36,0.574,38,1.676,40,0.335,41,0.11,42,1.867,45,2.106,46,0.895,55,2.426,57,0.021,58,0.021,60,1.262,62,2.106,63,2.696,64,3.387,71,3.666,72,2.106,75,3.387,76,2.426,77,3.387,78,2.106,79,2.94,86,2.426,87,2.426,92,2.106,94,2.426,202,1.676,301,3.387,341,2.94,342,3.903,343,3.903,344,2.912,345,4.066,346,4.443,347,2.912,348,2.426,349,4.066,350,2.912,351,2.912,352,2.426]],["title/classes/SignInDto.html",[41,0.12,156,1.827]],["body/classes/SignInDto.html",[3,0.417,4,0.366,5,0.366,9,0.527,14,1.116,20,0.032,22,1.02,33,0.587,40,0.417,41,0.178,57,0.024,58,0.024,101,2.234,102,3.013,104,1.703,111,2.711,156,2.711,170,3.356,275,3.356,330,1.888,353,3.786,354,3.019,355,4.362,356,3.624,357,3.925,358,3.624,359,3.019,360,2.621]],["title/classes/SignUpDto.html",[41,0.12,160,1.827]],["body/classes/SignUpDto.html",[3,0.417,4,0.366,5,0.366,9,0.527,14,1.116,20,0.032,22,1.02,33,0.587,40,0.417,41,0.178,57,0.024,58,0.024,101,2.234,102,3.013,104,1.703,111,2.711,160,2.711,168,3.356,275,3.356,330,1.888,353,3.786,355,4.362,357,3.925,359,3.019,360,2.621,361,3.019,362,3.624,363,3.624]],["title/classes/UpdateUserDto.html",[41,0.12,364,1.827]],["body/classes/UpdateUserDto.html",[3,0.489,4,0.429,5,0.429,20,0.032,33,0.844,40,0.489,41,0.161,42,2.725,57,0.027,58,0.027,329,2.214,330,2.214,332,3.074,364,2.999,365,3.542,366,4.251,367,3.542,368,3.074,369,3.074,370,4.251]],["title/classes/UserEntity.html",[41,0.12,257,2.035]],["body/classes/UserEntity.html",[3,0.424,4,0.371,5,0.371,9,0.536,14,1.321,20,0.031,21,1.764,22,1.207,40,0.424,41,0.139,57,0.024,58,0.024,101,2.256,102,3.035,104,1.817,105,3.051,257,3.051,275,3.381,330,1.917,371,3.066,372,3.814,373,3.68,374,3.68,375,3.68,376,3.68]],["title/controllers/UsersController.html",[106,1.505,377,2.035]],["body/controllers/UsersController.html",[3,0.257,4,0.226,5,0.226,9,0.325,10,1.031,14,1.137,19,1.631,20,0.033,21,1.498,22,0.97,23,1.631,25,1.475,33,0.725,36,0.441,40,0.257,41,0.085,46,1.475,57,0.017,58,0.017,85,1.165,104,1.69,106,1.06,108,0.969,111,2.763,115,1.863,151,1.863,163,2.797,164,3.358,329,2.626,364,3.096,368,2.427,369,2.427,372,3.646,377,2.152,378,1.863,379,1.863,380,3.732,381,2.797,382,2.797,383,2.797,384,1.863,385,2.236,386,2.236,387,1.863,388,3.357,389,2.236,390,1.863,391,3.357,392,2.236,393,1.863,394,3.357,395,2.236,396,2.236,397,2.236,398,2.236,399,2.099,400,1.863,401,1.863,402,1.863,403,2.236,404,2.236,405,2.236,406,2.236,407,2.236,408,2.236,409,2.236,410,2.236,411,2.236,412,2.236]],["title/modules/UsersModule.html",[117,1.26,130,1.827]],["body/modules/UsersModule.html",[3,0.411,4,0.36,5,0.36,20,0.032,33,0.841,36,0.704,40,0.411,41,0.135,57,0.024,58,0.024,108,2.021,117,2.063,119,1.692,120,1.692,121,2.054,122,2.054,123,1.692,124,2.991,125,2.054,130,3.376,131,2.685,132,2.054,133,2.054,377,3.332,399,3.055,400,2.974,413,2.974,414,2.974,415,3.569,416,3.569]],["title/injectables/UsersService.html",[34,0.626,399,1.654]],["body/injectables/UsersService.html",[3,0.276,4,0.242,5,0.242,9,0.349,10,1.087,14,1.172,19,1.69,20,0.033,21,1.552,22,1.004,23,1.69,25,1.644,30,2.417,33,0.681,34,0.698,36,0.474,40,0.276,41,0.091,46,1.52,52,1.54,57,0.018,58,0.018,60,1.04,104,1.52,105,3.595,329,2.577,364,3.081,368,2.56,369,2.56,372,3.743,379,2.001,380,3.866,381,2.949,382,2.949,383,2.949,384,2.949,387,2.949,390,2.949,393,2.949,399,1.844,401,2.001,402,2.001,417,2.001,418,2.402,419,2.402,420,2.402,421,2.402,422,2.402,423,4.948,424,2.402,425,2.402,426,2.402]],["title/coverage.html",[427,3.12]],["body/coverage.html",[0,2.498,1,1.337,5,0.234,6,1.936,7,1.799,8,1.936,20,0.032,22,0.503,30,1.21,34,1.045,41,0.185,52,1.489,57,0.018,58,0.018,59,1.21,61,1.936,62,2.498,96,1.489,97,1.337,99,1.936,100,1.936,106,1.955,107,1.489,109,1.936,113,1.21,123,1.101,145,1.936,149,1.489,150,1.936,156,1.337,160,1.337,165,1.21,168,1.489,170,1.489,174,1.68,186,1.489,187,1.936,197,1.68,228,1.21,230,1.489,245,1.936,257,1.489,315,1.936,329,1.21,331,1.936,332,2.498,333,1.936,341,1.68,342,1.936,343,1.936,353,2.498,354,1.936,361,1.936,364,1.337,365,1.936,371,1.936,377,1.489,378,1.936,399,1.21,417,1.936,427,1.68,428,2.323,429,2.323,430,2.323,431,6.219,432,3.455,433,5.442,434,1.936,435,1.936,436,1.936,437,4.566,438,1.936,439,5.297,440,2.878,441,2.323,442,3.455,443,2.323,444,1.936,445,1.936,446,1.936,447,2.323,448,3.455,449,2.323,450,2.323]],["title/dependencies.html",[120,1.808,451,2.216]],["body/dependencies.html",[20,0.033,36,0.707,38,2.064,39,2.989,41,0.177,57,0.024,58,0.024,74,2.064,78,3.385,79,2.594,120,1.701,138,2.3,139,2.3,196,2.594,235,2.594,269,2.989,325,2.989,348,2.989,360,2.594,367,2.989,452,5.21,453,3.587,454,3.587,455,3.587,456,3.587,457,3.587,458,3.587,459,3.587,460,3.587,461,3.587,462,3.587,463,3.587,464,3.587,465,3.587,466,3.587,467,3.587,468,3.587,469,3.587]],["title/miscellaneous/enumerations.html",[470,1.386,471,3.177]],["body/miscellaneous/enumerations.html",[9,0.671,20,0.028,57,0.028,58,0.028,176,3.508,470,2.401,471,3.84,472,4.609,473,5.472,474,4.609,475,4.609,476,4.609]],["title/miscellaneous/functions.html",[470,1.386,477,3.177]],["body/miscellaneous/functions.html",[9,0.684,20,0.028,57,0.028,58,0.028,123,2.79,446,3.916,470,2.448,477,3.916,478,4.7]],["title/index.html",[9,0.387,479,2.66,480,2.66]],["body/index.html",[4,0.305,20,0.032,57,0.021,58,0.021,93,2.519,427,2.187,481,3.024,482,3.024,483,4.173,484,3.024,485,3.024,486,3.024,487,3.024,488,3.024,489,3.024,490,2.519,491,4.779,492,3.024,493,3.024,494,3.024,495,3.024,496,5.729,497,3.024,498,3.024,499,3.024,500,5.59,501,3.024,502,3.024,503,4.173,504,3.024,505,3.024,506,3.024,507,4.173,508,4.173,509,3.024,510,3.024,511,3.024,512,4.173,513,4.173,514,3.024,515,3.024,516,3.024,517,3.024,518,3.024,519,2.519,520,3.024,521,3.024,522,3.024,523,3.024,524,3.024,525,3.024,526,3.024,527,3.024,528,3.024,529,3.024,530,2.519,531,3.024,532,3.024,533,3.024,534,3.024,535,3.024,536,3.024,537,2.519]],["title/modules.html",[119,2.046]],["body/modules.html",[20,0.027,57,0.027,58,0.027,118,2.775,119,2.052,129,2.491,130,2.491,224,2.491,519,4.925,538,5.912,539,5.912,540,5.912]],["title/overview.html",[541,3.595]],["body/overview.html",[2,2.357,20,0.031,57,0.023,58,0.023,59,2.587,60,1.412,96,2.089,108,1.412,113,2.587,117,1.293,118,3.808,119,1.545,120,1.545,121,1.875,122,1.875,123,1.545,124,1.875,125,1.875,126,2.715,127,2.715,128,2.715,129,3.193,130,3.193,131,2.527,132,1.875,133,1.875,165,2.587,224,3.362,225,2.715,226,2.715,330,1.697,352,2.715,399,2.587,413,2.715,414,2.715,541,2.715,542,3.259,543,3.259,544,3.259,545,3.259,546,3.259]],["title/properties.html",[101,1.808,451,2.216]],["body/properties.html",[20,0.032,57,0.028,58,0.028,101,2.185,490,3.84,530,3.84,537,3.84,547,4.609,548,4.609,549,4.609]],["title/miscellaneous/variables.html",[470,1.386,550,3.177]],["body/miscellaneous/variables.html",[9,0.47,17,2.335,20,0.033,22,0.945,30,2.759,46,0.992,57,0.022,58,0.022,97,2.512,104,1.341,174,3.157,176,2.798,197,3.157,202,2.512,203,3.636,346,2.69,434,2.69,435,2.69,436,3.636,438,3.636,440,2.69,444,2.69,445,3.636,470,1.682,550,2.69,551,3.23,552,4.365,553,3.23,554,5.296,555,5.296,556,3.23,557,4.365,558,3.23,559,4.365,560,3.23,561,3.23,562,3.23,563,3.23,564,3.23]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserDto.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":548,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":352,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"overview.html":{}}}],["10.0.2",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["10.2.5",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":546,"title":{},"body":{"overview.html":{}}}],["3",{"_index":543,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":542,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":545,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":544,"title":{},"body":{"overview.html":{}}}],["7.1.11",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":334,"title":{},"body":{"injectables/HashingService.html":{}}}],["access",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["accesstoken",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["accesstokenstrategy",{"_index":59,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["activeuser",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["activeuserdata",{"_index":97,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adds",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["already",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["amazing",{"_index":520,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["app",{"_index":498,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":114,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":240,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["appcontroller",{"_index":107,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":489,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":118,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":113,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arguments",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["async",{"_index":63,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["audience",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":174,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":179,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["auth_type_key",{"_index":197,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":152,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["authentication/authentication.module",{"_index":340,"title":{},"body":{"modules/IamModule.html":{}}}],["authenticationcontroller",{"_index":149,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationguard",{"_index":186,"title":{"guards/AuthenticationGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":207,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authenticationmodule",{"_index":224,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservice",{"_index":165,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["authguard('jwt",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["author",{"_index":530,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":181,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["authtype",{"_index":176,"title":{},"body":{"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":198,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":200,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":188,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":203,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":214,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{}}}],["backers",{"_index":521,"title":{},"body":{"index.html":{}}}],["based",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["bcrypt",{"_index":325,"title":{},"body":{"injectables/BcryptService.html":{},"dependencies.html":{}}}],["bcryptservice",{"_index":230,"title":{"injectables/BcryptService.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/BcryptService.html":{},"coverage.html":{}}}],["bearer",{"_index":475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["body",{"_index":163,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["bootstrap",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":540,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":538,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":319,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["building",{"_index":484,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["canactivate(context",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["catch",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkuserexist",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkuserexist(email",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["class",{"_index":41,"title":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserDto.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":225,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_providers",{"_index":226,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_iammodule",{"_index":337,"title":{},"body":{"modules/IamModule.html":{}}}],["cluster_iammodule_imports",{"_index":338,"title":{},"body":{"modules/IamModule.html":{}}}],["cluster_usersmodule",{"_index":413,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":414,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compare",{"_index":316,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["compare(data",{"_index":318,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["config/jwt.config/jwt.config",{"_index":237,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["configmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":243,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["configmodule.forroot",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":66,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{}}}],["conflictexception",{"_index":267,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["conflictexception('email",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["const",{"_index":202,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/RefreshTokenStrategy.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["constructor(hashservice",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(jwtconfigservice",{"_index":65,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["constructor(private",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":191,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["context.getclass",{"_index":206,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.gethandler",{"_index":205,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["controller",{"_index":106,"title":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('authentication",{"_index":180,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["controller('users",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/authentication.controller",{"_index":236,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["coverage",{"_index":427,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":368,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createparamdecorator",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":329,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["crypto",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ctx",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["data.interface",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["data.interface.ts",{"_index":100,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["declarations",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/UsersController.html":{}}}],["decorators/auth/auth.decorator",{"_index":175,"title":{},"body":{"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{}}}],["default",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":190,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":120,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":490,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":499,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/sign",{"_index":167,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["dto/update",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":509,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":485,"title":{},"body":{"index.html":{}}}],["email",{"_index":102,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/AuthenticationService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{}}}],["encrypt",{"_index":320,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["enumerations",{"_index":471,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/auth",{"_index":177,"title":{},"body":{"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{}}}],["err",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["error",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error.code",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["exception",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["executioncontext",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["expiresin",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["export",{"_index":40,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserDto.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":348,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":76,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":87,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["false",{"_index":89,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["field",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserDto.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["flat",{"_index":210,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["found",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["framework",{"_index":483,"title":{},"body":{"index.html":{}}}],["fulfilled",{"_index":217,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["function",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":477,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatetoken",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["generatetoken(user",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["gensalt",{"_index":324,"title":{},"body":{"injectables/BcryptService.html":{}}}],["gensalt(10",{"_index":328,"title":{},"body":{"injectables/BcryptService.html":{}}}],["get(':id",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":479,"title":{"index.html":{}},"body":{}}],["grow",{"_index":516,"title":{},"body":{"index.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}},"body":{"coverage.html":{}}}],["guard.canactivate(context",{"_index":213,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["guardpromises",{"_index":211,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["guards.map((guard",{"_index":212,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["guards/access",{"_index":238,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["guards/authentication/authentication.guard",{"_index":239,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["handlerequest",{"_index":12,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["handlerequest(err",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["hash",{"_index":317,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["hash(data",{"_index":322,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["hashedpassword",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hashing.service",{"_index":326,"title":{},"body":{"injectables/BcryptService.html":{}}}],["hashing/bcrypt/bcrypt.service",{"_index":231,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["hashing/hashing.service",{"_index":229,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["hashingservice",{"_index":228,"title":{"injectables/HashingService.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"coverage.html":{}}}],["hashservice",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hello",{"_index":147,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":527,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":534,"title":{},"body":{"index.html":{}}}],["iam/iam.module",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["iammodule",{"_index":129,"title":{"modules/IamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"modules.html":{},"overview.html":{}}}],["id",{"_index":372,"title":{},"body":{"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":88,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["implements",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/BcryptService.html":{}}}],["import",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{}}}],["in.dto",{"_index":171,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["in.dto.ts",{"_index":354,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:5",{"_index":356,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:8",{"_index":358,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto/sign",{"_index":170,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserDto.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":73,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{}}}],["inject(jwtconfig.key",{"_index":83,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":34,"title":{"injectables/AccessTokenStrategy.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UsersService.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":60,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":495,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":497,"title":{},"body":{"index.html":{}}}],["interface",{"_index":96,"title":{"interfaces/ActiveUserData.html":{}},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":98,"title":{},"body":{"interfaces/ActiveUserData.html":{}}}],["interfaces/active",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isemail",{"_index":355,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["ismatch",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["issuer",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["join",{"_index":523,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":79,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwtconfig",{"_index":80,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["jwtconfigservice",{"_index":68,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["jwtconfigservice.secret",{"_index":95,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["jwtconfiguration",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwtfromrequest",{"_index":86,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":234,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmodule.registerasync(jwtconfig.asprovider",{"_index":244,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtservice",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["kamil",{"_index":531,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":537,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":513,"title":{},"body":{"index.html":{}}}],["map((type",{"_index":208,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["match",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserDto.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":359,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(8",{"_index":357,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":470,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":512,"title":{},"body":{"index.html":{}}}],["mode",{"_index":503,"title":{},"body":{"index.html":{}}}],["module",{"_index":117,"title":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":119,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":526,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":532,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":491,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":536,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":196,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":235,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthenticationModule.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":367,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["new",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":482,"title":{},"body":{"index.html":{}}}],["none",{"_index":476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["null",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["number",{"_index":105,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/AuthenticationService.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{}}}],["observable",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["open",{"_index":514,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":541,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["package",{"_index":451,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":366,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":370,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":78,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":233,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":75,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":82,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["passreqtocallback",{"_index":350,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["password",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{}}}],["patch",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["payload",{"_index":71,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["please",{"_index":524,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":496,"title":{},"body":{"index.html":{}}}],["post",{"_index":164,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/UsersController.html":{}}}],["post('sign",{"_index":157,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["prefix",{"_index":151,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["prisma/client",{"_index":269,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["prismamodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["prismamodule.forroot",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaservice",{"_index":232,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["private",{"_index":84,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["production",{"_index":93,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"index.html":{}}}],["progressive",{"_index":481,"title":{},"body":{"index.html":{}}}],["project",{"_index":515,"title":{},"body":{"index.html":{}}}],["promise",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["promise.all",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise.allsettled(guardpromises",{"_index":215,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["properties",{"_index":101,"title":{"properties.html":{}},"body":{"interfaces/ActiveUserData.html":{},"guards/AuthenticationGuard.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{},"properties.html":{}}}],["provide",{"_index":241,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["providers",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["randomuuid",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["read",{"_index":525,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":85,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":199,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["reflect",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":192,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["refresh",{"_index":349,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["refreshtoken",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refreshtokenid",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshtokenstrategy",{"_index":341,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["rejected",{"_index":216,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["rejected['reason",{"_index":220,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["remove",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":494,"title":{},"body":{"index.html":{}}}],["request",{"_index":346,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"miscellaneous/variables.html":{}}}],["request.headers?.authorization.split",{"_index":351,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["request[request_user_key",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":222,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["result.status",{"_index":219,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["result.value",{"_index":223,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["results",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserDto.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.find((result",{"_index":218,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["results.some",{"_index":221,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["return",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":500,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"dependencies.html":{}}}],["salt",{"_index":327,"title":{},"body":{"injectables/BcryptService.html":{}}}],["scalable",{"_index":486,"title":{},"body":{"index.html":{}}}],["secret",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["secretorkey",{"_index":94,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["server",{"_index":487,"title":{},"body":{"index.html":{}}}],["services/authentication.service",{"_index":166,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{}}}],["set",{"_index":91,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["setmetadata(auth_type_key",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":488,"title":{},"body":{"index.html":{}}}],["signin",{"_index":153,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signin(@body",{"_index":184,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["signin(signindto",{"_index":155,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signindto",{"_index":156,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signtoken",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signtoken(userid",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signup",{"_index":154,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signup(@body",{"_index":182,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["signup(signupdto",{"_index":159,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["signupdto",{"_index":160,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserDto.html":{},"injectables/HashingService.html":{},"modules/IamModule.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":518,"title":{},"body":{"index.html":{}}}],["src/.../active",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.decorator.ts",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iam.contant.ts",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":145,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":146,"title":{},"body":{"injectables/AppService.html":{}}}],["src/iam/authentication/authentication.module.ts",{"_index":227,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/iam/authentication/controllers/authentication.controller.ts",{"_index":150,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{}}}],["src/iam/authentication/controllers/authentication.controller.ts:18",{"_index":162,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/iam/authentication/controllers/authentication.controller.ts:23",{"_index":158,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/iam/authentication/decorators/active",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/iam/authentication/decorators/auth/auth.decorator.ts",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/iam/authentication/dto/sign",{"_index":353,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/iam/authentication/enums/auth",{"_index":474,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/iam/authentication/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/iam/authentication/guards/authentication/authentication.guard.ts",{"_index":187,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/iam/authentication/guards/authentication/authentication.guard.ts:23",{"_index":194,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/iam/authentication/guards/authentication/authentication.guard.ts:8",{"_index":193,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/iam/authentication/interfaces/active",{"_index":99,"title":{},"body":{"interfaces/ActiveUserData.html":{},"coverage.html":{}}}],["src/iam/authentication/services/authentication.service.ts",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/iam/authentication/services/authentication.service.ts:103",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/iam/authentication/services/authentication.service.ts:20",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/iam/authentication/services/authentication.service.ts:29",{"_index":255,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/iam/authentication/services/authentication.service.ts:37",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/iam/authentication/services/authentication.service.ts:51",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/iam/authentication/services/authentication.service.ts:77",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/iam/authentication/strategies/access",{"_index":61,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{}}}],["src/iam/authentication/strategies/refresh",{"_index":342,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/iam/config/jwt.config/jwt.config",{"_index":81,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["src/iam/constants/iam.contant.ts",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/iam/hashing/bcrypt/bcrypt.service.ts",{"_index":315,"title":{},"body":{"injectables/BcryptService.html":{},"coverage.html":{}}}],["src/iam/hashing/bcrypt/bcrypt.service.ts:11",{"_index":321,"title":{},"body":{"injectables/BcryptService.html":{}}}],["src/iam/hashing/bcrypt/bcrypt.service.ts:7",{"_index":323,"title":{},"body":{"injectables/BcryptService.html":{}}}],["src/iam/hashing/hashing.service.ts",{"_index":333,"title":{},"body":{"injectables/HashingService.html":{},"coverage.html":{}}}],["src/iam/hashing/hashing.service.ts:5",{"_index":336,"title":{},"body":{"injectables/HashingService.html":{}}}],["src/iam/hashing/hashing.service.ts:6",{"_index":335,"title":{},"body":{"injectables/HashingService.html":{}}}],["src/iam/iam.module.ts",{"_index":339,"title":{},"body":{"modules/IamModule.html":{}}}],["src/main.ts",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":365,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":371,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":374,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":373,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":376,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":375,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/users/users.controller.ts",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:11",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:16",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:21",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":415,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":419,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":420,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":421,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":418,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":501,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":504,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":505,"title":{},"body":{"index.html":{}}}],["started",{"_index":480,"title":{"index.html":{}},"body":{}}],["starter",{"_index":493,"title":{},"body":{"index.html":{}}}],["statements",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":189,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["stay",{"_index":528,"title":{},"body":{"index.html":{}}}],["strategies/access",{"_index":172,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{}}}],["strategy",{"_index":77,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":104,"title":{},"body":{"interfaces/ActiveUserData.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":103,"title":{},"body":{"interfaces/ActiveUserData.html":{},"injectables/AuthenticationService.html":{}}}],["super",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["super.canactivate(context",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["support",{"_index":519,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":539,"title":{},"body":{"modules.html":{}}}],["t",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":508,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":511,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":510,"title":{},"body":{"index.html":{}}}],["tests",{"_index":507,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":517,"title":{},"body":{"index.html":{}}}],["this.accesstokenguard",{"_index":201,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.appservice.gethello",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signin(signindto",{"_index":185,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authservice.signup(signupdto",{"_index":183,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.authtypeguardmap[type",{"_index":209,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.checkuserexist(email",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.generatetoken(user",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.hashservice.compare(password",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.hashservice.hash(password",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwtconfiguration.accesstokenttl",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwtconfiguration.audience",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwtconfiguration.issuer",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwtconfiguration.refreshtokenttl",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwtconfiguration.secret",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.jwtservice.signasync",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.prismaservice.user.create",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.prismaservice.user.findunique",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.reflector.getallandoverride",{"_index":204,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.signtoken",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.signtoken(user.id",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{}}}],["todo",{"_index":90,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["token",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["token.guard",{"_index":195,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:11",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:15",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:21",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.strategy",{"_index":173,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{}}}],["token.strategy.ts",{"_index":62,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:10",{"_index":344,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:19",{"_index":347,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:20",{"_index":70,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["token.strategy.ts:8",{"_index":67,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["token/refresh",{"_index":343,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["touch",{"_index":529,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":92,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"guards/AuthenticationGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["try",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["twitter",{"_index":535,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/ActiveUserData.html":{},"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":178,"title":{},"body":{"controllers/AuthenticationController.html":{},"guards/AuthenticationGuard.html":{}}}],["type.enum.ts",{"_index":473,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":492,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":35,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AuthenticationService.html":{}}}],["unauthorizedexception('no",{"_index":53,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["unauthorizedexception('user",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["undefined",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":506,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":72,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthenticationService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["unlicensed",{"_index":549,"title":{},"body":{"properties.html":{}}}],["up",{"_index":161,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["up.dto",{"_index":169,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{}}}],["up.dto.ts",{"_index":361,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["up.dto.ts:5",{"_index":362,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:8",{"_index":363,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto/sign",{"_index":168,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/AuthenticationService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["update",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updates",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":364,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["useclass",{"_index":242,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["user",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"interfaces/ActiveUserData.html":{},"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.decorator.ts",{"_index":436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":369,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.email",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.id",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.name",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.password",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user/active",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user?.[field",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userentity",{"_index":257,"title":{"classes/UserEntity.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["userid",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["users",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":416,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":268,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["users/users.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":377,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":130,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":399,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":64,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(payload",{"_index":69,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["validate(request",{"_index":345,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["validator",{"_index":360,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"dependencies.html":{}}}],["value",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":550,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":547,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":502,"title":{},"body":{"index.html":{}}}],["website",{"_index":533,"title":{},"body":{"index.html":{}}}],["world",{"_index":148,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["you'd",{"_index":522,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/IamModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/iam/authentication/guards/access-token/access-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/iam/authentication/guards/access-token/access-token.guard.ts:11\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/guards/access-token/access-token.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/guards/access-token/access-token.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AccessTokenGuard extends AuthGuard('jwt') implements CanActivate {\n  constructor() {\n    super();\n  }\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err: any, user: any, info: any) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException('No access token found');\n    }\n    return user;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/strategies/access-token/access-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtConfigService: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/iam/authentication/strategies/access-token/access-token.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtConfigService\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/strategies/access-token/access-token.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport jwtConfig from '../../../../../src/iam/config/jwt.config/jwt.config';\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfigService: ConfigType,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      //   ignoreExpiration: false, // TODO: set to true in production\n      secretOrKey: jwtConfigService.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserData.html":{"url":"interfaces/ActiveUserData.html","title":"interface - ActiveUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/interfaces/active-user-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ActiveUserData {\n  sub: number;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nIamModule\n\nIamModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IamModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from 'nestjs-prisma';\nimport { IamModule } from './iam/iam.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    PrismaModule.forRoot(),\n    ConfigModule.forRoot(),\n    IamModule,\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/controllers/authentication.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                authentication\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sign-in')\n                \n            \n\n            \n                \n                    Defined in src/iam/authentication/controllers/authentication.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                SignInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sign-up')\n                \n            \n\n            \n                \n                    Defined in src/iam/authentication/controllers/authentication.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { SignUpDto } from '../dto/sign-up.dto/sign-up.dto';\nimport { SignInDto } from '../dto/sign-in.dto/sign-in.dto';\nimport { AccessTokenStrategy } from '../strategies/access-token/access-token.strategy';\nimport { Auth } from '../decorators/auth/auth.decorator';\nimport { AuthType } from '../enums/auth-type.enum';\n\n@Auth(AuthType.None)\n@Controller('authentication')\nexport class AuthenticationController {\n  constructor(\n    private readonly authService: AuthenticationService,\n    private readonly accessTokenStrategy: AccessTokenStrategy,\n  ) {}\n\n  @Post('sign-up')\n  signUp(@Body() signUpDto: SignUpDto) {\n    return this.authService.signUp(signUpDto);\n  }\n\n  @Post('sign-in')\n  signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/iam/authentication/guards/authentication/authentication.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/iam/authentication/guards/authentication/authentication.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/guards/authentication/authentication.guard.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { AccessTokenGuard } from './../access-token/access-token.guard';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthType } from '../../enums/auth-type.enum';\nimport { Reflector } from '@nestjs/core';\nimport { AUTH_TYPE_KEY } from '../../decorators/auth/auth.decorator';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly accessTokenGuard: AccessTokenGuard,\n  ) {}\n  private static readonly defaultAuthType = AuthType.Bearer;\n\n  private readonly authTypeGuardMap: Record = {\n    [AuthType.None]: { canActivate: () => true },\n    [AuthType.Bearer]: this.accessTokenGuard,\n  };\n\n  async canActivate(context: ExecutionContext): Promise {\n    const authTypes = this.reflector.getAllAndOverride(\n      AUTH_TYPE_KEY,\n      [context.getHandler(), context.getClass()],\n    ) ?? [AuthenticationGuard.defaultAuthType];\n\n    const guards = authTypes\n      .map((type: any) => this.authTypeGuardMap[type])\n      .flat();\n\n    const guardPromises = guards.map((guard: any) =>\n      guard.canActivate(context),\n    );\n\n    const results = await Promise.allSettled(guardPromises); //? return 'rejected' or 'fulfilled'\n\n    const rejected = results.find((result: any) => {\n      return result.status === 'rejected';\n    });\n\n    if (rejected) {\n      throw rejected['reason'];\n    }\n\n    return results.some(\n      (result: any) => result.status === 'fulfilled' && result.value,\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAccessTokenStrategy->AuthenticationModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/iam/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessTokenStrategy\n                        \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HashingService } from '../hashing/hashing.service';\nimport { BcryptService } from '../hashing/bcrypt/bcrypt.service';\nimport { PrismaService } from 'nestjs-prisma';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthenticationService } from './services/authentication.service';\nimport { AuthenticationController } from './controllers/authentication.controller';\nimport jwtConfig from '../config/jwt.config/jwt.config';\nimport { AccessTokenStrategy } from './strategies/access-token/access-token.strategy';\nimport { AccessTokenGuard } from './guards/access-token/access-token.guard';\nimport { AuthenticationGuard } from './guards/authentication/authentication.guard';\nimport { APP_GUARD } from '@nestjs/core';\n\n@Module({\n  providers: [\n    {\n      provide: HashingService,\n      useClass: BcryptService,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n    },\n    AuthenticationService,\n    PrismaService,\n    AccessTokenStrategy,\n    AccessTokenGuard,\n  ],\n  imports: [\n    PassportModule,\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync(jwtConfig.asProvider()),\n  ],\n  controllers: [AuthenticationController],\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                checkUserExist\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Private\n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hashService: HashingService, prismaService: PrismaService, jwtConfiguration: ConfigType<>, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/iam/authentication/services/authentication.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hashService\n                                                  \n                                                        \n                                                                        HashingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        checkUserExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserExist(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/services/authentication.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/services/authentication.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(signInDto: SignInDto)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/services/authentication.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                SignInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userID: number, expiresIn: number, payload?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/services/authentication.service.ts:103\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expiresIn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/services/authentication.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { HashingService } from '../../hashing/hashing.service';\nimport { PrismaService } from 'nestjs-prisma';\nimport { SignInDto } from '../dto/sign-in.dto/sign-in.dto';\nimport { SignUpDto } from '../dto/sign-up.dto/sign-up.dto';\nimport { UserEntity } from '../../../users/entities/user.entity';\nimport { User } from '@prisma/client';\nimport { randomUUID } from 'crypto';\nimport jwtConfig from '../../config/jwt.config/jwt.config';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { ActiveUserData } from '../interfaces/active-user-data.interface';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(\n    private readonly hashService: HashingService,\n    private readonly prismaService: PrismaService,\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  private async checkUserExist(email: string): Promise {\n    return await this.prismaService.user.findUnique({\n      where: {\n        email,\n      },\n    });\n  }\n\n  async signIn(signInDto: SignInDto) {\n    const { email, password } = signInDto;\n\n    const user = await this.checkUserExist(email);\n\n    if (!user) throw new ConflictException('Email not exists');\n\n    const isMatch = await this.hashService.compare(password, user.password);\n\n    if (!isMatch) throw new UnauthorizedException('User or password not match');\n\n    return await this.generateToken(user);\n  }\n\n  async signUp(signUpDto: SignUpDto) {\n    const { email, password } = signUpDto;\n\n    if ((await this.checkUserExist(email)) !== null)\n      throw new ConflictException('Email already exists');\n\n    const hashedPassword = await this.hashService.hash(password);\n    const user = new UserEntity();\n    user.email = email;\n    user.password = hashedPassword;\n    user.name = 'Anonymous';\n\n    try {\n      await this.prismaService.user.create({\n        data: {\n          ...user,\n        },\n      });\n    } catch (error) {\n      if (error.code === 'P2002') {\n        throw new ConflictException('Email already exists');\n      }\n      throw error;\n    }\n  }\n\n  async generateToken(user: UserEntity) {\n    const refreshTokenId = randomUUID();\n\n    const payload = {\n      email: user.email,\n    };\n\n    const [accessToken, refreshToken] = await Promise.all([\n      //* accessToken\n      this.signToken>(\n        user.id,\n        this.jwtConfiguration.accessTokenTtl,\n        payload,\n      ),\n      //* refreshToken\n      this.signToken(user.id, this.jwtConfiguration.refreshTokenTtl, {\n        refreshTokenId,\n      }),\n    ]);\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n\n  private async signToken(userID: number, expiresIn: number, payload?: T) {\n    return await this.jwtService.signAsync(\n      {\n        sub: userID,\n        ...payload,\n      },\n      {\n        audience: this.jwtConfiguration.audience,\n        issuer: this.jwtConfiguration.issuer,\n        secret: this.jwtConfiguration.secret,\n        expiresIn,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptService.html":{"url":"injectables/BcryptService.html","title":"injectable - BcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/hashing/bcrypt/bcrypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                    \n                    compare(data: string | Buffer, encrypt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/hashing/bcrypt/bcrypt.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encrypt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                    \n                    hash(data: string | Buffer)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/hashing/bcrypt/bcrypt.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { hash, genSalt, compare } from 'bcrypt';\nimport { HashingService } from '../hashing.service';\n\n@Injectable()\nexport class BcryptService implements HashingService {\n  async hash(data: string | Buffer): Promise {\n    const salt = await genSalt(10);\n    return hash(data, salt);\n  }\n  async compare(data: string | Buffer, encrypt: string): Promise {\n    return compare(data, encrypt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashingService.html":{"url":"injectables/HashingService.html","title":"injectable - HashingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/hashing/hashing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                compare\n                            \n                            \n                                    Abstract\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        compare\n                        \n                    \n                \n            \n            \n                \n                    \n                    compare(data: string | Buffer, encrypt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/hashing/hashing.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encrypt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        hash\n                        \n                    \n                \n            \n            \n                \n                    \n                    hash(data: string | Buffer)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/hashing/hashing.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport abstract class HashingService {\n  abstract hash(data: string | Buffer): Promise;\n  abstract compare(data: string | Buffer, encrypt: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IamModule.html":{"url":"modules/IamModule.html","title":"module - IamModule","body":"\n                   \n\n\n\n\n    Modules\n    IamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IamModule\n\n\n\ncluster_IamModule_imports\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nIamModule\n\nIamModule\n\nIamModule -->\n\nAuthenticationModule->IamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/iam/iam.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthenticationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthenticationModule } from './authentication/authentication.module';\n\n@Module({\n  providers: [],\n  controllers: [],\n  imports: [AuthenticationModule],\n})\nexport class IamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/strategies/refresh-token/refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/iam/authentication/strategies/refresh-token/refresh-token.strategy.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/iam/authentication/strategies/refresh-token/refresh-token.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request } from 'express';\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'refresh-token',\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: any) {\n    const refreshToken = request.headers?.authorization.split(' ')[1];\n    return { refreshToken, ...payload };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/dto/sign-in.dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/iam/authentication/dto/sign-in.dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/iam/authentication/dto/sign-in.dto/sign-in.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsEmail()\n  email: string;\n\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/dto/sign-up.dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/iam/authentication/dto/sign-up.dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/iam/authentication/dto/sign-up.dto/sign-up.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsEmail()\n  email: string;\n\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserEntity {\n  id: number;\n  email: string;\n  password: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/iam/authentication/controllers/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/authentication/decorators/active-user/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/iam/authentication/decorators/auth/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/iam/authentication/decorators/auth/auth.decorator.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/iam/authentication/dto/sign-in.dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/authentication/dto/sign-up.dto/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/authentication/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/iam/authentication/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/iam/authentication/interfaces/active-user-data.interface.ts\n            \n            interface\n            ActiveUserData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/authentication/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/iam/authentication/strategies/access-token/access-token.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/authentication/strategies/refresh-token/refresh-token.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/constants/iam.contant.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/iam/hashing/bcrypt/bcrypt.service.ts\n            \n            injectable\n            BcryptService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/hashing/hashing.service.ts\n            \n            injectable\n            HashingService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.2.5\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.2.5\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.2.5\n        \n            @nestjs/swagger : ^7.1.11\n        \n            @prisma/client : ^5.3.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            nestjs-prisma : ^0.22.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/iam/authentication/enums/auth-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 Bearer\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ pnpm installRunning the app\n# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\n# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nIamModule\n\nIamModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAccessTokenStrategy->AuthenticationModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\nIamModule -->\n\nAuthenticationModule->IamModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.decorator.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../iam.contant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/iam/authentication/decorators/active-user/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof ActiveUserData | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: ActiveUserData | undefined = request[REQUEST_USER_KEY];\n    return field ? user && user?.[field] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/iam/authentication/decorators/auth/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) =>\n  SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n\n        \n    \n\n    src/iam/constants/iam.contant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
